{"version":3,"sources":["components/Die.js","components/Player.js","components/RollDice.js","App.js","reportWebVitals.js","index.js"],"names":["Die","face","className","Player","number","currentScore","globalScore","RollDice","playerTurn88","sides","useState","die1","die2","playerTurn","rolling","totalScore","winner","players","player1","player2","state","setState","String","onClick","newDie1","Math","floor","random","length","newDie2","score1","Object","values","score2","keys","setTimeout","prevState","disabled","defaultProps","one","two","three","four","five","six","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAUeA,EALH,SAAC,GAAU,IAATC,EAAQ,EAARA,KACV,OAAO,mBAAGC,UAAS,0BAAuBD,MCkB/BE,G,MAnBA,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,YAEnC,OACI,sBAAKJ,UAAU,SAAf,UACI,gCACI,yCAAYE,KACZ,6BAAKE,OAET,sBAAKJ,UAAU,UAAf,UACI,wCACA,4BAAIG,YCTdE,G,MAAW,SAAC,GAAW,IA6CXC,EA7CCC,EAAS,EAATA,MAEf,EAAyBC,mBAAU,CAC9BC,KAAM,MACNC,KAAM,OACNC,WAAY,EACZC,SAAS,EACTC,WAAa,EACbC,OAAQ,EACRC,QAAQ,CACJC,QAAQ,CACJb,aAAc,EACdC,YAAa,GAEjBa,QAAQ,CACLd,aAAc,EACdC,YAAa,MAdzB,mBAAOc,EAAP,KAAaC,EAAb,KAsBOV,EAAoDS,EAApDT,KAAKC,EAA+CQ,EAA/CR,KAAKE,EAA0CM,EAA1CN,QAAoBD,GAAsBO,EAAjCL,WAAiCK,EAAtBP,YAAsBO,EAAXH,QAqChD,OACI,sBAAKf,UAAU,aAAf,UACO,cAAC,EAAD,CAAQE,OAAQ,EAAGC,aAAc,EAAGC,YAAa,IAChD,sBAAKJ,UAAU,YAAf,UACI,sBAAKA,UAAU,YAAf,UACI,cAAC,EAAD,CAAKD,KAAMqB,OAAOX,GAAOG,QAASA,IAClC,cAAC,EAAD,CAAKb,KAAMqB,OAAOV,GAAOE,QAASA,OAEtC,sBAAKZ,UAAU,UAAf,UACI,wBAAQqB,QA3Cf,WACT,IAAMC,EAAUf,EAAMgB,KAAKC,MAAMD,KAAKE,SAASlB,EAAMmB,SAC/CC,EAAUpB,EAAMgB,KAAKC,MAAMD,KAAKE,SAASlB,EAAMmB,SAC/CE,EAASC,OAAOC,OAAOR,GACvBS,EAASF,OAAOC,OAAOH,GAC7BR,EAAS,CACLV,KAAMoB,OAAOG,KAAKV,GAClBZ,KAAMmB,OAAOG,KAAKL,GAClBf,SAAS,EACTC,WAAYe,EAAO,GAAKG,EAAO,KAGnCE,YAAW,WACPd,GAAU,SAAAe,GAAS,kCAASA,GAAT,IAAmBtB,SAAS,SAChD,MA6BoCuB,SAAUvB,EAAjC,SACKA,EAAU,aAAe,cAG9B,wBAAQS,SA7Bdf,EA6B4BK,OA3BjB,IAAjBL,GACCa,EAAS,CACLR,WAAY,MAyBL,wBAOR,cAAC,EAAD,CAAQT,OAAQ,EAAIC,aAAc,EAAGC,YAAa,SAKlEC,EAAS+B,aAAc,CACpB7B,MAAO,CACF,CAAC8B,IAAK,GACN,CAACC,IAAK,GACN,CAACC,MAAO,GACR,CAACC,KAAM,GACP,CAACC,KAAM,GACP,CAACC,IAAK,KAKCrC,Q,MCxFAsC,MATf,WACE,OACE,qBAAK3C,UAAU,MAAf,SAEI,cAAC,EAAD,OCCO4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d0941202.chunk.js","sourcesContent":["import react from \"react\";\r\nimport \"./Die.css\";\r\n\r\n\r\n\r\nconst Die = ({face})=>{\r\n    return <i className = {`die fas fa-dice-${face}` } />\r\n    \r\n};\r\n\r\nexport default Die;","\r\nimport React from \"react\";\r\nimport \"./Player.css\"\r\n\r\n\r\nconst Player = ({number, currentScore ,globalScore})=>{\r\n\r\n    return(\r\n        <div className=\"player\">\r\n            <div>\r\n                <h2>PLAYER {number}</h2>\r\n                <h1>{globalScore}</h1>\r\n            </div>\r\n            <div className=\"current\">\r\n                <p>Current</p>\r\n                <p>{currentScore}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Player;","import React, {useState} from \"react\";\r\nimport Die from \"./Die.js\";\r\nimport Player from \"./Player.js\";\r\nimport \"./RollDice.css\";\r\n\r\n\r\nconst RollDice = ({sides})=>{\r\n\r\n    const [state,setState] = useState ({\r\n         die1: \"one\",\r\n         die2: \"four\",\r\n         playerTurn: 1,\r\n         rolling: false,\r\n         totalScore : 0,\r\n         winner: 0,\r\n         players:{\r\n             player1:{\r\n                 currentScore: 0,\r\n                 globalScore: 0\r\n             },\r\n             player2:{\r\n                currentScore: 0,\r\n                globalScore: 0\r\n            }\r\n        }\r\n         \r\n\r\n\r\n    });\r\n\r\n    const {die1,die2,rolling, totalScore,playerTurn,players} = state;\r\n\r\n\r\n    const roll = ()=>{\r\n        const newDie1 = sides[Math.floor(Math.random()*sides.length)];\r\n        const newDie2 = sides[Math.floor(Math.random()*sides.length)];\r\n        const score1 = Object.values(newDie1);\r\n        const score2 = Object.values(newDie2);\r\n        setState({\r\n            die1: Object.keys(newDie1),\r\n            die2: Object.keys(newDie2),\r\n            rolling: true,\r\n            totalScore: score1[0] + score2[0]\r\n        })\r\n\r\n        setTimeout(()=>{\r\n            setState( prevState => ({...prevState,rolling: false}))\r\n        }, 1000)\r\n\r\n    };\r\n\r\n    const hold = (playerTurn88)=>{\r\n     // console.log(playerTurn88);\r\n        if (playerTurn88 === 1){\r\n             setState({\r\n                 playerTurn: 2\r\n              });\r\n        }else{\r\n            // setState({\r\n            //     playerTurn: 1\r\n            //   })\r\n        }\r\n        \r\n        \r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"game-board\">\r\n               <Player number={1} currentScore={1} globalScore={1}/>\r\n                <div className=\"roll-dice\">\r\n                    <div className=\"container\">\r\n                        <Die face={String(die1)} rolling={rolling} />\r\n                        <Die face={String(die2)} rolling={rolling}/>\r\n                    </div>\r\n                    <div className=\"buttons\">\r\n                        <button onClick={roll} disabled={rolling}>\r\n                            {rolling ? \"Rolling...\" : \"Roll Dice\"}\r\n                        </button>\r\n\r\n                        <button onClick={hold(playerTurn)} >\r\n                            Hold\r\n                        </button>\r\n                    </div>\r\n                   \r\n                    \r\n                </div>\r\n                <Player number={2}  currentScore={2} globalScore={2}/>\r\n       </div>\r\n    )\r\n};\r\n\r\nRollDice.defaultProps ={\r\n   sides: [\r\n        {one :1},\r\n        {two :2},\r\n        {three :3},\r\n        {four :4},\r\n        {five :5},\r\n        {six :6},\r\n\r\n   ]\r\n}\r\n\r\nexport default RollDice;\r\n","\nimport react from 'react';\nimport RollDiec from \"./components/RollDice\";\nimport \"./App.css\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n        \n        <RollDiec/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}